{"version":3,"sources":["logo.png","component/Button.js","component/Breakfast.js","component/Lunch.js","action/client.js","action/actionTypes.js","component/Client.js","component/Waiter.js","component/Kitchen.js","component/BoxHeader.js","Frame.js","App.js","serviceWorker.js","reducer/index.js","reducer/client.js","store/index.js","store/initialState.js","index.js"],"names":["module","exports","__webpack_require__","p","Button","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","customOnButtonClick","react_default","a","createElement","onClick","rol","Component","menu","require","breakfastmenu","state","_this2","menubreakfast","breakfast","map","product","src_component_Button","item","price","nameProduct","id","lunchmenu","menulunch","lunch","firstName","dispatch","client","type","payload","Diner","handleName","e","preventDefault","turnName","getTitle","value","onSubmit","className","onChange","name","ref","input","connect","objectSpread","Waiter","showBreakfast","showLunch","BreakfastFunc","LunchFunc","setState","Client","Breakfast","Lunch","Kitchen","BoxHeader","showKitchen","showWaiter","WaiterFunc","KitchenFunc","src","BoxHeaderLogo","alt","src_component_Waiter","component_Kitchen","Frame","src_component_BoxHeader","App","src_Frame","Boolean","window","location","hostname","match","combineReducers","arguments","length","undefined","action","createStore","reducer","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","render","es","store","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.246fac82.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9f59266a.png\";","import React, {Component} from 'react';\nimport './Button.css';\n\nclass Button extends Component{\n\n    constructor (props){\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n    handleClick(){\n        this.props.customOnButtonClick();\n    }\n    render(){\n        return(\n            <button onClick={this.handleClick}>{this.props.rol}</button> \n        )\n    }\n}    \nexport default (Button);","import React, { Component } from 'react';\nimport Button from './Button';\n\nconst menu = require(\"../data/breakfastdata\")\nclass breakfastmenu extends Component {\n  constructor() {\n    super();\n    this.state = {\n      menu,\n    }\n  }\n  render() {\n    const menubreakfast = menu.breakfast.map((product) => {\n      return (\n        <Button rol={product.item + \"\" + product.price} customOnButtonClick={() => { this.props.nameProduct(menubreakfast) }} />\n      )\n    })\n    return (\n      <div id=\"secondboxitem\">\n       {menubreakfast}\n      </div>\n\n    );\n  }\n}\nexport default (breakfastmenu);\n","import React, { Component } from 'react';\nimport Button from './Button';\n\nconst menu = require(\"../data/lunchdata\")\nclass lunchmenu extends Component {\n  constructor() {\n    super();\n    this.state = {\n      menu,\n    }\n  }\n  render() {\n    const menulunch = menu.lunch.map((product) => {\n      return (\n        <Button rol={product.item + \"\" + product.price} customOnButtonClick={() => { this.props.nameProduct(menulunch) }} />\n      )\n    })\n    return (\n      <div id=\"secondboxitem\">\n       {menulunch}\n      </div>\n\n    );\n  }\n}\nexport default (lunchmenu);","import{clientnew} from \"./actionTypes\";\n\nexport const firstName = dispatch => (client) => {\n    dispatch({\n        type: clientnew,\n        payload: client\n    })\n}\n","export const clientnew =\"clientnew\";\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {firstName} from '../action/client'\n\n\nclass Diner extends Component {\n    constructor(props) {\n        super(props);\n        this.handleName = this.handleName.bind(this);\n      }\n    handleName = (e) => {\n        e.preventDefault();\n        this.props.turnName(this.getTitle.value)\n    }\n      \n  render() {\n     \n  return (\n    <div>\n       <form onSubmit={this.handleName}>\n          <div className=\"form-group\">\n            <input\n              onChange={this.props.onChange}\n              className=\"form-control\"\n              type=\"text\"\n              name=\"firstName\"\n              ref={(input) => this.getTitle = input}\n              //value={this.props.formValues.firstName}\n            />\n          </div>\n          <button type = \"submit\">Enviar </button>\n        </form>\n\n    </div>\n  );\n }\n}\nconst mapStateToProps = (state)=>{\n    return {\n      ...state\n    };\n  };\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n      turnName: firstName(dispatch),\n      \n    }\n  }\n\n  \n  export default connect(\n    mapStateToProps,\n    mapDispatchToProps\n    )(Diner);","import React, {Component} from 'react';\nimport './Waiter.css';\nimport Button from './Button';\nimport Breakfast from './Breakfast';\nimport Lunch from './Lunch';\nimport {connect} from 'react-redux';\nimport Client from './Client';\n\nclass Waiter extends Component{\n    constructor(props){\n        super(props);\n            this.state ={\n                showBreakfast: false,\n                showLunch: false,\n            }\n\n            this.BreakfastFunc= this.BreakfastFunc.bind(this);\n            this.LunchFunc= this.LunchFunc.bind(this);    \n        }\n\n    \n\n    BreakfastFunc(){\n        this.setState({\n            ...this.state,\n            showBreakfast: true,\n            showLunch: false,\n        })\n    }\n\n    LunchFunc(){\n        this.setState({\n            ...this.state,\n            showBreakfast: false,\n            showLunch: true,\n        })\n    }\n\n    render(){\n\n        return (\n            <div id=\"containerMenu\">\n            \n             <Client/>\n             <div id = \"dinerName\"> \n            {this.props.client.client}\n            </div>\n            <div id=\"boxitem\">\n            <Button rol = \"Desayuno\" customOnButtonClick ={this.BreakfastFunc}/>\n            <Button rol=\"Almuerzo\" customOnButtonClick={this.LunchFunc}/>\n            \n            {\n                this.state.showBreakfast &&\n                <Breakfast></Breakfast>\n            }\n            {\n                this.state.showLunch &&\n                <Lunch></Lunch>\n            }\n            </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state)=>{\n    return {\n      ...state\n    };\n  }\n  \n  export default connect(\n    mapStateToProps\n  )(Waiter); ","import React, {Component} from 'react';\n\nclass Kitchen extends Component{\n    breakfast(){\n\n    }\n\n    render(){\n\n        return (\n            <article className=\"orders\">\n            \n            <h2>Hola</h2>\n\n            </article>\n        )\n    }\n}\n\nexport default Kitchen;\n","import React, {Component} from 'react'\nimport './BoxHeader.css';\nimport BoxHeaderLogo from '../logo.png';\nimport Button from './Button';\nimport Waiter from './Waiter';\nimport Kitchen from './Kitchen';\n\nclass BoxHeader extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      showKitchen: false,\n      showWaiter: false,\n    }\n\n    this.WaiterFunc = this.WaiterFunc.bind(this);\n    this.KitchenFunc = this.KitchenFunc.bind(this);\n  }\n  WaiterFunc (){\n    this.setState({\n      ...this.state,\n      showWaiter : true,\n      showKitchen : false\n    })\n  }\n  KitchenFunc (){\n    this.setState({\n      ...this.state,\n      showWaiter : false,\n      showKitchen : true\n    })\n  }\n  \n  render () {\n    return (\n      <div>\n    <div className= \"BoxHeader\">\n      <img src={BoxHeaderLogo} className = \"BoxHeaderLogo\" alt=\"logo\"/>\n      \n    </div>\n    <div id=\"options\">\n    <Button rol = \"Meser@\" customOnButtonClick ={this.WaiterFunc}/>\n      <Button rol = \"Cocina\"customOnButtonClick ={this.KitchenFunc}/>\n    </div>\n    <div id=\"containerMenu\">\n    \n      {\n        this.state.showWaiter && \n        <Waiter></Waiter>\n      }\n      {\n        this.state.showKitchen &&\n        <Kitchen></Kitchen>\n      }\n    </div>\n    </div>\n    \n    );\n  }\n}\n\nexport default (BoxHeader);","import React, { Component } from 'react';\nimport BoxHeader from './component/BoxHeader'\n\n\nclass Frame extends Component {\n  \n  render() {\n    return (\n      <div>\n        <BoxHeader/> \n      </div>\n    );\n  }\n}\n\nexport default (Frame);","import React, {Component} from 'react';\nimport './App.css';\nimport Frame from './Frame'\n\n\nclass App extends Component {\n  render () {\n      return (\n        <div className=\"App\">\n        <Frame/>\n      </div>  \n     );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\nimport client from './client';\n\nexport default combineReducers ({\n    client\n})","import {clientnew} from '../action/actionTypes';\nexport default (\n    state = {\n        client: \"\"\n    },\n    action\n ) => {\n     switch(action.type){\n         case clientnew : \n         return {\n             ...state,\n             client: action.payload\n         }\n         default: return state;\n     }\n }\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer from '../reducer';\nimport state from './initialState';\n\nexport default createStore(\n  reducer,\n  state, \n  composeWithDevTools(applyMiddleware(thunkMiddleware))\n);","export default {\n  \n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n ,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}